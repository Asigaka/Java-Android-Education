package com.asigaka.braintrainer;import androidx.appcompat.app.AppCompatActivity;import android.content.SharedPreferences;import android.content.res.ColorStateList;import android.graphics.Color;import android.os.Bundle;import android.os.CountDownTimer;import android.preference.PreferenceManager;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;public class MainActivity extends AppCompatActivity {    private int maxTimerMillis = 15000;    private TextView textViewTimer;    private TextView textViewScore;    private TextView textViewExample;    private Button buttonAnswer1;    private Button buttonAnswer2;    private Button buttonAnswer3;    private Button buttonAnswer4;    private ArrayList<Button> buttonsArr;    private String example;    private int rightAnswer;    private int rightAnswerPosition;    private int min = 3;    private int max = 30;    private boolean isPositive;    private String recordKey = "Record";    private int score;    private int recordScore;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        initialize();        timer();        playNext();    }    private void initialize() {        textViewTimer = findViewById(R.id.textViewTimer);        textViewScore = findViewById(R.id.textViewScore);        textViewExample = findViewById(R.id.textViewExample);        buttonAnswer1 = findViewById(R.id.answerBtn1);        buttonAnswer2 = findViewById(R.id.answerBtn2);        buttonAnswer3 = findViewById(R.id.answerBtn3);        buttonAnswer4 = findViewById(R.id.answerBtn4);        buttonsArr = new ArrayList<>();        buttonsArr.add(buttonAnswer1);        buttonsArr.add(buttonAnswer2);        buttonsArr.add(buttonAnswer3);        buttonsArr.add(buttonAnswer4);    }    private void playNext() {        generateExample();        for (Button button : buttonsArr) {            if (buttonsArr.indexOf(button) == rightAnswerPosition) {                button.setText(Integer.toString(rightAnswer));            } else {                button.setText(Integer.toString(generateWrongAnswer()));            }        }        textViewScore.setText(Integer.toString(score));    }    private void timer() {        CountDownTimer timer = new CountDownTimer(maxTimerMillis,1000) {            @Override            public void onTick(long millisUntilFinished) {                int seconds = (int) (millisUntilFinished / 1000);                textViewTimer.setText(Integer.toString(seconds));                if (seconds <= 5) {                    textViewTimer.setTextColor(Color.RED);                }            }            @Override            public void onFinish() {                onTimerFinish();            }        };        timer.start();    }    private void generateExample() {        int a = (int) (Math.random() * (max - min + 1) + min);        int b = (int) (Math.random() * (max - min + 1) + min);        int mark = (int) (Math.random() * 2);        isPositive = mark == 1;        if (isPositive) {            rightAnswer = a + b;            example = String.format("%s + %s", a, b);        } else {            rightAnswer = a - b;            example = String.format("%s - %s", a, b);        }        textViewExample.setText(example);        rightAnswerPosition = (int) (Math.random() * 4);    }    private int generateWrongAnswer() {        int result;        do {            result = (int) (Math.random() * max * 2 + 1) - (max - min);        } while (result == rightAnswer);        return result;    }    public void onClickAnswer(View view) {        Button button = (Button) view;        String answer = button.getText().toString();        int chosenAnswer = Integer.parseInt(answer);        if (chosenAnswer == rightAnswer) {            Toast.makeText(MainActivity.this, "Верно", Toast.LENGTH_SHORT).show();            score++;            textViewScore.setText(Integer.toString(score));        } else {            Toast.makeText(MainActivity.this, "Не верно", Toast.LENGTH_SHORT).show();        }        playNext();    }    private void saveRecord() {        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);        preferences.edit().putInt(recordKey, score).apply();    }    private int getRecord() {        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);        return preferences.getInt(recordKey, 0);    }    private void onTimerFinish() {        Toast.makeText(MainActivity.this, String.format("Ваш результат - %s. Рекорд - %s", score, getRecord()), Toast.LENGTH_LONG).show();        saveRecord();    }}